# GraphQL schema example
#
# https://gqlgen.com/getting-started/

input newProfile {
  firstName: String 
  lastName: String
  age: Int
  phoneNum: String
  birthDay: String
  gender: String
  bio: String
  city: String
  profilePic: String
}

type profile {
  firstName: String 
  lastName: String
  age: Int
  phoneNum: String
  birthDay: String
  gender: String
  bio: String
  city: String
  profilePic: String
}

input newPref {
  ageRange: String
  gender: String
  location: String
  darkMode: Boolean
}

# How are these inputted how are these read???
type pref {
  ageRange: String
  gender: String
  location: String
  darkMode: Boolean
}

input newUser {
  profile: newProfile!
  todaysMatch: String
  longTermMatches: [String]
  pastMatches: [String]
  lostMatches: [String]
  blockMatches: [String]
  dailyAnswer: String
  preference: newPref
}

type user {
  userID: String!
  profile: profile!
  todaysMatch: String
  longTermMatches: [String]
  lostMatches: [String]
  blockMatches: [String]
  dailyAnswer: String
  preference: pref
}

type Query {
  allUsers: [user]
  userByID(userID: String!): user! 
  # sendSMS(): Verify
}

type Mutation {
  createNewUser(input: newUser!): user!

  # Go through all users and setup matches
  findTodaysMatches: user!

  # When user wants to turn user into connection
  matchWith(userid: String!, matchesID: String!): user!
  unmatchWith(userid: String!, matchesID: String!): user!
  blockPerson(userID: String!, blockedID: String!): user!
  changePreferences(userID: String!, input: newPref): user!
  sendDailyAnswer(userID: String!, answer: String!): user!
}

# type subscription {
#     sendDailyQuestion(): Boolean
# }